SUB R3, R3, R3 ; clear R3-R7
SUB R4, R4, R4
SUB R5, R5, R5
SUB R6, R6, R6
SUB R7, R7, R7
ADD R3, R3, #-50	; Load R3 <= -50
ADD R4, R4, #10		; Load R4 <= 10
ADDS R5, R3, R4		; R5 <= 10+(-50) = -40
					; Z=0, C=0, N=1, V=0
					; 		R6			R7
ORREQ R6, 0x01		; F 0000 0000		
ORRNE R7, 0x01		; T 			0000 0001
ORRCS R6, 0x02		; F 0000 0000
ORRCC R7, 0x02		; T 			0000 0010
ORRMI R6, 0x04		; T 0000 0100
ORRPL R7, 0x04		; F 			0000 0000
ORRVS R6, 0x08		; F 0000 0000
ORRVC R7, 0x08		; T 			0000 1000
ORRHI R6, 0x10		; F 0000 0000
ORRLS R7, 0x10		; T 			0001 0000
ORRGE R6, 0x20		; F 0000 0000 
ORRLT R7, 0x20		; T 			0010 0000
ORRGT R6, 0x40		; F 0000 0000 
ORRLE R7, 0x40		; T 			0100 0000
					; Total should be:
					;	0000 0100	0111 1011
					;		0x04		0x7B
SUB R4, R4, R4		; clear R4 again for storage  part
STR R6, [R4], #0	; store R6 into DM[0]
ADD R4, R4, 1
STR R7, [R4], #0	; store R7 into DM[1]
B #-8				; idle PC
SUB R3, R3, R3		; clear all registers needed again
SUB R5, R5, R5
SUB R6, R6, R6
SUB R7, R7, R7
ADD R3, R3, #10		; load R3 <= 10
SUBS R3, R3, #1		; R3 <= R3 -1
BNE #-12		; if the zero flag is low, branch back 1 instruction
ADD R4, R4, #1
STR R3, [R4], #0	; store the value of R3 into DM[2]
ADD R3, R3, -10		; load R3 <= -10
ADDS R3,R3, #1		; R3 <= R3 + 1
BMI #-12		; branch back while the negative flag is high
ADD R4, R4, #1		; ISTRncrement the index, and store R3 into DM[R4]
STR R3, [R4], #0
ADD R3, R3, 127		; Load R3 <= 127
ADDS R3, R3, R3		; R3 <= R3*2
BVC #-12		; branch back if overflow is low
ADD R4, R4, #1		; Increment the index, and store R3 into DM[R4]
STR R3, [R4], #0	
SUB R3, R3, R3		; Clear R3
ADD R3, R3, 127		; Load R3 <= 127
ADDS R3, R3, R3		; R3 <= R3*2
BCC #-12		; branch back if the carry flag is low
ADD R4, R4, #1		; Increment the index, and store R3 into DM[R4]
STR R3, [R4], #0	; Store R3 into DM[R4]
LDR R5, [R4], #0	; Load R5 <= DM[R4]
ADD R4, R4, 1		; Increment R4
CMP R3, R5		; compare that R3 and R5 are the same
ADDEQ R6, R6, 0xFF	; if they are, add 0xFF into R6
ADDNE R6, R6, 0x11	; otherwise add 0x11 into R6
STR R6, [R4], #0	; Store R6 into DM[R4]
SUB R3, R3, R3		; Clear R3 and R5
SUB R5, R5, R5
ADD R3, R3, 0x1F	; Load R3 <= 0x1F (= 0001 1111)
ADD R5, R5, 0xF8	; Load R5 <= 0xF8 (= 1111 1000
AND R6, R3, R5		; Load R6 <= R3&R5 (should be 0001 1000 = 0x18)
ORR R7, R3, R5		; Load R7 <= R3|R5 (should be 1111 1111 = 0xFF)
ADD R4, R4, #1		; Increment R4 and Store R6, then repeat for R7
STR R6, [R4], #0
ADD R4, R4, #1
STR R7, [R4], #0
B #-8			; Idle

STR


SUB R3, R3, R3
SUB R4, R4, R4
SUB R5, R5, R5
SUB R6, R6, R6
SUB R7, R7, R7
ADD R3, R3, #-50
ADD R4, R4, #10
ADDS R5, R3, R4
ORR R6, 0x01
ORR R7, 0x01
ORR R6, 0x02
ORR R7, 0x02
ORR R6, 0x04
ORR R7, 0x04
ORR R6, 0x08
ORR R7, 0x08
ORR R6, 0x10
ORR R7, 0x10
ORR R6, 0x20
ORR R7, 0x20
ORR R6, 0x40
ORR R7, 0x40
SUB R3, R3, R3
STR R6, [R3], #0
ADD R3, R3, 1
STR R7, [R3], #0
SUB R3, R3, R3
SUB R4, R4, R4
SUB R5, R5, R5
SUB R6, R6, R6
SUB R7, R7, R7
ADD R4, R4, 2
ADD R3, R3, #10
SUBS R3, R3, #1
BEQ #-12
STR R3, [R4], #0
ADD R3, R3, -10
ADDS R3,R3, #1
BMI #-12
ADD R4, R4, #1
STR R3, [R4], #0
ADD R3, R3, 127
ADDS R3, R3, R3
BVC #-12
ADD R4, R4, #1
STR R3, [R4], #0
SUB R3, R3, R3
ADD R3, R3, 127
ADDS R3, R3, R3
BCC #-12
ADD R4, R4, #1
STR R3, [R4], #0
LDR R5, [R4], #0
ADD R4, R4, 1
CMP R3, R5
ADDEQ R6, R6, 0xFF
ADDNE R6, R6, 0x11
STR R6, [R4], #0
SUB R3, R3, R3
SUB R5, R5, R5
ADD R3, R3, 0x1F
ADD R5, R5, 0xF8
AND R6, R3, R5
ORR R7, R3, R5
ADD R4, R4, #1
STR R6, [R4], #0
ADD R4, R4, #1
STR R7, [R4], #0
B #-8


E0433003
E0444004
E0455005
E0466006
E0477007
E2433032
E284400A
E0935004
03866001
13877001
23866002
33877002
43866004
53877004
63866008
73877008
83866010
93877010
A3866020
B3877020
C3866040
D3877040
E0433003
E4836000
E2833001
E4837000
E0433003
E0444004
E0455005
E0466006
E0477007
E2844002
E283300A
E2533001
0AFFFFFD
E4843000
E243300A
E2933001
4AFFFFFD
E2844001
E4843000
E283307F
E0933003
7AFFFFFD
E2844001
E4843000
E0433003
E283307F
E0933003
3AFFFFFD
E2844001
E4843000
E4945000
E2844001
E1530005
028660FF
12866011
E4846000
E0433003
E0455005
E283301F
E28550F8
E0036005
E1837005
E2844001
E4846000
E2844001
E4847000
EAFFFFFE

00000000000000000000000000000NaN
11100000010000110011000000000011
11100000010001000100000000000100
11100000010001010101000000000101
11100000010001100110000000000110
11100000010001110111000000000111
11100010010000110011000000110010
11100010100001000100000000001010
11100000100100110101000000000100
00000011100001100110000000000001
00010011100001110111000000000001
00100011100001100110000000000010
00110011100001110111000000000010
01000011100001100110000000000100
01010011100001110111000000000100
01100011100001100110000000001000
01110011100001110111000000001000
10000011100001100110000000010000
10010011100001110111000000010000
10100011100001100110000000100000
10110011100001110111000000100000
11000011100001100110000001000000
11010011100001110111000001000000
11100000010000110011000000000011
11100100100000110110000000000000
11100010100000110011000000000001
11100100100000110111000000000000
11100000010000110011000000000011
11100000010001000100000000000100
11100000010001010101000000000101
11100000010001100110000000000110
11100000010001110111000000000111
11100010100001000100000000000010
11100010100000110011000000001010
11100010010100110011000000000001
00001010111111111111111111111101
11100100100001000011000000000000
11100010010000110011000000001010
11100010100100110011000000000001
01001010111111111111111111111101
11100010100001000100000000000001
11100100100001000011000000000000
11100010100000110011000001111111
11100000100100110011000000000011
01111010111111111111111111111101
11100010100001000100000000000001
11100100100001000011000000000000
11100000010000110011000000000011
11100010100000110011000001111111
11100000100100110011000000000011
00111010111111111111111111111101
11100010100001000100000000000001
11100100100001000011000000000000
11100100100101000101000000000000
11100010100001000100000000000001
11100001010100110000000000000101
00000010100001100110000011111111
00010010100001100110000000010001
11100100100001000110000000000000
11100000010000110011000000000011
11100000010001010101000000000101
11100010100000110011000000011111
11100010100001010101000011111000
11100000000000110110000000000101
11100001100000110111000000000101
11100010100001000100000000000001
11100100100001000110000000000000
11100010100001000100000000000001
11100100100001000111000000000000
11101010111111111111111111111110
